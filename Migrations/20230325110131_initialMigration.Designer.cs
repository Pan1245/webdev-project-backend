// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using houseofgriffin_api.Data;

#nullable disable

namespace houseofgriffinapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230325110131_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrivateRegistrationRequestStudent", b =>
                {
                    b.Property<int>("privateRegistrationRequestsid")
                        .HasColumnType("int");

                    b.Property<int>("studentsid")
                        .HasColumnType("int");

                    b.HasKey("privateRegistrationRequestsid", "studentsid");

                    b.HasIndex("studentsid");

                    b.ToTable("StudentRequests", (string)null);
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<string>("subdistrict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("studentId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.EA", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firebaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EAs");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.EP", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firebaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EPs");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.ExamDate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("examDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("privateCourseId")
                        .HasColumnType("int");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("privateCourseId");

                    b.HasIndex("studentId");

                    b.ToTable("ExamDate");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.OA", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firebaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("OAs");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Parent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("studentId")
                        .IsUnique();

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("groupRegReqId")
                        .HasColumnType("int");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("privateRegReqId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("privateRegReqId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PaymentFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paymentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("paymentId");

                    b.ToTable("PaymentFiles");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PreferredDay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("privateReqInfoId")
                        .HasColumnType("int");

                    b.Property<string>("toTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("privateReqInfoId");

                    b.ToTable("PreferredDays");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateClass", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("method")
                        .HasColumnType("int");

                    b.Property<int?>("privateCourseId")
                        .HasColumnType("int");

                    b.Property<string>("room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("studentCancellationRequestId")
                        .HasColumnType("int");

                    b.Property<string>("toTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("privateCourseId");

                    b.ToTable("PrivateClasses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateCourse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hourPerClass")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("method")
                        .HasColumnType("int");

                    b.Property<int>("reqId")
                        .HasColumnType("int");

                    b.Property<int>("requestid")
                        .HasColumnType("int");

                    b.Property<string>("section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalHour")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("requestid");

                    b.ToTable("PrivateCourses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateRegistrationRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("EARemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EAStatus")
                        .HasColumnType("int");

                    b.Property<int?>("EAid")
                        .HasColumnType("int");

                    b.Property<string>("EPRemark1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPRemark2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EPid")
                        .HasColumnType("int");

                    b.Property<string>("OARemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OAid")
                        .HasColumnType("int");

                    b.Property<string>("courseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("paymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int?>("takenByEAId")
                        .HasColumnType("int");

                    b.Property<int?>("takenByEPId")
                        .HasColumnType("int");

                    b.Property<int?>("takenByOAId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("EAid");

                    b.HasIndex("EPid");

                    b.HasIndex("OAid");

                    b.HasIndex("takenByEAId");

                    b.HasIndex("takenByEPId");

                    b.HasIndex("takenByOAId");

                    b.HasIndex(new[] { "status", "EAStatus", "paymentStatus" }, "Index_statuses");

                    b.ToTable("PrivateRegistrationRequests");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateRegistrationRequestInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hourPerClass")
                        .HasColumnType("int");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("method")
                        .HasColumnType("int");

                    b.Property<int>("requestId")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalHour")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("requestId");

                    b.ToTable("PrivateRegistrationRequestInfos");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Staff", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firebaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("countryOfSchool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("dob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firebaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("healthInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hogInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("levelOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("school")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetUni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.StudentAdditionalFiles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("studentId");

                    b.ToTable("StudentAdditionalFiles");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.StudentClassCancellationRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("OARemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("privateClassId")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<string>("studentRemark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("privateClassId")
                        .IsUnique();

                    b.HasIndex("studentId");

                    b.ToTable("StudentClassCancellationRequest");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Teacher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firebaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.TeacherLeavingRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("EARemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OARemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<string>("teacherRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("teacherId");

                    b.ToTable("TeacherLeavingRequests");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.TeacherPrivateClass", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("privateClassId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<string>("workType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("privateClassId")
                        .IsUnique();

                    b.HasIndex("teacherId");

                    b.HasIndex(new[] { "status" }, "Index_status");

                    b.ToTable("TeacherPrivateClasses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.WorkTime", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<string>("toTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("teacherId");

                    b.ToTable("WorkTimes");
                });

            modelBuilder.Entity("houseofgriffin_api.StudentPrivateClass", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("attendance")
                        .HasColumnType("int");

                    b.Property<int>("classId")
                        .HasColumnType("int");

                    b.Property<int>("privateClassid")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("privateClassid");

                    b.HasIndex("studentId");

                    b.HasIndex(new[] { "attendance" }, "Index_attendance");

                    b.ToTable("StudentPrivateClasses");
                });

            modelBuilder.Entity("PrivateRegistrationRequestStudent", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateRegistrationRequest", null)
                        .WithMany()
                        .HasForeignKey("privateRegistrationRequestsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("houseofgriffin_api.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("studentsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Address", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.Student", "student")
                        .WithOne("address")
                        .HasForeignKey("houseofgriffin_api.Models.Address", "studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.ExamDate", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateCourse", "privateCourse")
                        .WithMany("examDates")
                        .HasForeignKey("privateCourseId");

                    b.HasOne("houseofgriffin_api.Models.Student", "student")
                        .WithMany("examDates")
                        .HasForeignKey("studentId");

                    b.Navigation("privateCourse");

                    b.Navigation("student");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Parent", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.Student", "student")
                        .WithOne("parent")
                        .HasForeignKey("houseofgriffin_api.Models.Parent", "studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Payment", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateRegistrationRequest", "privateRegReq")
                        .WithMany()
                        .HasForeignKey("privateRegReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("privateRegReq");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PaymentFile", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.Payment", "payment")
                        .WithMany("payment")
                        .HasForeignKey("paymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("payment");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PreferredDay", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateRegistrationRequestInfo", "privateReqInfo")
                        .WithMany("preferredDays")
                        .HasForeignKey("privateReqInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("privateReqInfo");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateClass", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateCourse", "privateCourse")
                        .WithMany("privateClasses")
                        .HasForeignKey("privateCourseId");

                    b.Navigation("privateCourse");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateCourse", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateRegistrationRequest", "request")
                        .WithMany()
                        .HasForeignKey("requestid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("request");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateRegistrationRequest", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.EA", null)
                        .WithMany("privateRegistrationRequests")
                        .HasForeignKey("EAid");

                    b.HasOne("houseofgriffin_api.Models.EP", null)
                        .WithMany("privateRegistrationRequests")
                        .HasForeignKey("EPid");

                    b.HasOne("houseofgriffin_api.Models.OA", null)
                        .WithMany("privateRegistrationRequests")
                        .HasForeignKey("OAid");

                    b.HasOne("houseofgriffin_api.Models.Staff", "takenByEA")
                        .WithMany("privateRegistrationRequests")
                        .HasForeignKey("takenByEAId");

                    b.HasOne("houseofgriffin_api.Models.Staff", "takenByEP")
                        .WithMany()
                        .HasForeignKey("takenByEPId");

                    b.HasOne("houseofgriffin_api.Models.Staff", "takenByOA")
                        .WithMany()
                        .HasForeignKey("takenByOAId");

                    b.Navigation("takenByEA");

                    b.Navigation("takenByEP");

                    b.Navigation("takenByOA");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateRegistrationRequestInfo", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateRegistrationRequest", "privateRegistrationRequest")
                        .WithMany("privateRegistrationRequestInfos")
                        .HasForeignKey("requestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("privateRegistrationRequest");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.StudentAdditionalFiles", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.Student", "student")
                        .WithMany("additionalFiles")
                        .HasForeignKey("studentId");

                    b.Navigation("student");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.StudentClassCancellationRequest", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateClass", "privateClass")
                        .WithOne("studentClassCancellationRequest")
                        .HasForeignKey("houseofgriffin_api.Models.StudentClassCancellationRequest", "privateClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("houseofgriffin_api.Models.Student", "student")
                        .WithMany("classCancellationRequests")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("privateClass");

                    b.Navigation("student");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.TeacherLeavingRequest", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.Teacher", "teacher")
                        .WithMany("leavingRequests")
                        .HasForeignKey("teacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.TeacherPrivateClass", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateClass", "privateClass")
                        .WithOne("teacherPrivateClass")
                        .HasForeignKey("houseofgriffin_api.Models.TeacherPrivateClass", "privateClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("houseofgriffin_api.Models.Teacher", "teacher")
                        .WithMany("privateClasses")
                        .HasForeignKey("teacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("privateClass");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.WorkTime", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.Teacher", "teacher")
                        .WithMany("workTimes")
                        .HasForeignKey("teacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("houseofgriffin_api.StudentPrivateClass", b =>
                {
                    b.HasOne("houseofgriffin_api.Models.PrivateClass", "privateClass")
                        .WithMany("studentPrivateClasses")
                        .HasForeignKey("privateClassid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("houseofgriffin_api.Models.Student", "student")
                        .WithMany("privateClasses")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("privateClass");

                    b.Navigation("student");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.EA", b =>
                {
                    b.Navigation("privateRegistrationRequests");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.EP", b =>
                {
                    b.Navigation("privateRegistrationRequests");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.OA", b =>
                {
                    b.Navigation("privateRegistrationRequests");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Payment", b =>
                {
                    b.Navigation("payment");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateClass", b =>
                {
                    b.Navigation("studentClassCancellationRequest");

                    b.Navigation("studentPrivateClasses");

                    b.Navigation("teacherPrivateClass");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateCourse", b =>
                {
                    b.Navigation("examDates");

                    b.Navigation("privateClasses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateRegistrationRequest", b =>
                {
                    b.Navigation("privateRegistrationRequestInfos");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.PrivateRegistrationRequestInfo", b =>
                {
                    b.Navigation("preferredDays");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Staff", b =>
                {
                    b.Navigation("privateRegistrationRequests");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Student", b =>
                {
                    b.Navigation("additionalFiles");

                    b.Navigation("address");

                    b.Navigation("classCancellationRequests");

                    b.Navigation("examDates");

                    b.Navigation("parent");

                    b.Navigation("privateClasses");
                });

            modelBuilder.Entity("houseofgriffin_api.Models.Teacher", b =>
                {
                    b.Navigation("leavingRequests");

                    b.Navigation("privateClasses");

                    b.Navigation("workTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
